
1.	Используется спецификатор доступа protected для свободного доступа ко все свойствам внутри иерархии классов

2.	Используется запись типа Learner::operator=(Src); при копировании обьектов

3.  Используется библиотека <sstream> для облегчения работы со строками

4.1 Выбор контейнера типа vector так как может динамический расширятся, по сравнению с другими 
динамическими контейнерами , векторы эффективно получают доступ к своим елементам,
также удобно добавлять новую запись в конец вектора.

4.2 Можно было выбрать контейнер map или multimap для ассоциативного поиска по данным

5.  В программе старался максимально использовать передачу по ссылке что-бы не затрагивать лишние ресурсы

6.  Отсутствуют сеттеры для всех полей , но можно воспользоваться записью вида:

		Graduate *changeMe = dynamic_cast<Graduate*>(baseCollection.at(2));
		const_cast<std::string&>(changeMe->getDi()) = "Test";

		примечание: использование данного кода приведет к изменению названия диссертации у экземпляра
		коллекции baseCollection типа Graduate

7.	Сеттеры отсутствуют в задании, так понимаю для целостности данных..

8.  Функции у классов whoIs() изначально предназначались для определения типа указателя
